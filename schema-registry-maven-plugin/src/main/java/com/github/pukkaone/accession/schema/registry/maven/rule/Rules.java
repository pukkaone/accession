package com.github.pukkaone.accession.schema.registry.maven.rule;

import org.apache.avro.Schema;

/**
 * Rule convenience methods.
 */
public final class Rules {

  // Private constructor disallows creating instances of this class.
  private Rules() {
  }

  /**
   * If the input schema is a union with first type null, then return the union's second type,
   * otherwise return the input schema.
   *
   * @param schema
   *     to map
   * @return schema
   */
  public static Schema getSchemaFromNullable(Schema schema) {
    if (schema.getType() == Schema.Type.UNION
        && schema.getTypes().get(0).getType() == Schema.Type.NULL) {
      return schema.getTypes().get(1);
    }

    return schema;
  }

  private static boolean doIsDefaultEncoding(Schema schema, Class<?> javaType) {
    return schema.getType() == Schema.Type.RECORD
        && schema.getName().equals(javaType.getSimpleName())
        && schema.getNamespace().equals(javaType.getPackage().getName());
  }

  /**
   * Checks if schema was generated by default ReflectData encoding.
   *
   * @param schema
   *     to check
   * @param javaType
   *     Java class introspected by ReflectData
   * @return true if schema was generated by default ReflectData encoding.
   */
  public static boolean isDefaultEncoding(Schema schema, Class<?> javaType) {
    return doIsDefaultEncoding(getSchemaFromNullable(schema), javaType);
  }
}
